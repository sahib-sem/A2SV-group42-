class Solution:
    def validTicTacToe(self, board: List[str]) -> bool:
        counter=Counter("".join(board))

        #Game has not started 
        if "".join(board).strip()=='':
            return True

        # the count of X must be on greater than count of O
        if counter['X']==0 and counter['O']:
            return False
        elif counter['X']<counter['O'] or counter['X']>counter['O']+1:
            return False
        
        # now check if there are two winners
        count=0
        row_,col_,left_d,right_d=[False]*4
        winner=set()
        
        #horizontal check
        for row in board:

            if len(set(row))==1 and row.strip()!='':
                count+=1
                winner.add(row[0])
                row_=True
        print(count)
        #vertical check
        for c in range(3):
            column=""
            for r in range(3):
                column+=board[r][c]
            if len(set(column))==1 and column.strip()!='':
                count+=1
                winner.add(column[0])
                col_=True
        print(count)
        #diagonal check
        left_diagonal=''
        right_diagonal=''

        for r in range(3):
            for c in range(3):
                if r==c:
                    left_diagonal+=board[r][c]
                if r+c==2:
                    right_diagonal+=board[r][c]
        print(left_diagonal,right_diagonal)
        if len(set(left_diagonal))==1 and left_diagonal.strip()!='':
            winner.add(left_diagonal[0])
            count+=1
            left_d=True
        
        if len(set(right_diagonal))==1 and right_diagonal.strip()!='':
            winner.add(row[0])
            count+=1
            right_d=True
        print(winner)
        if len(winner)>=2:
            return False
        if len(winner)==1:
            if min(winner)=='O':
                return counter['X']==counter['O']
        
        
        print(count)
        if count==2:
            if col_ and row_:
                print(1,row_)
                return True
            elif left_d and right_d:
                print(2)
                return True
            elif (col_ and right_d) or (col_ and left_d):
                print(3)
                return True
            elif (row_ and right_d) or (row_ and left_d):
                print(4)
                return True
            else:
                return False
        elif count==1 or count==0:
            if counter['O'] ==counter['X'] and count==1:
                return False
            else:
                return True
        
        else:
            return False
